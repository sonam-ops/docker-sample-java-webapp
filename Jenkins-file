 pipeline {
 agent {
        label 'docker'
    }
 environment {
 AWS_ACCOUNT_ID="140023389359"
 AWS_DEFAULT_REGION="ap-southeast-1" 
 IMAGE_REPO_NAME="java_demo"
 IMAGE_TAG="V${env.BUILD_NUMBER}"
 REPOSITORY_URI = "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}"  
 }

 stages {
 
 stage('Logging into AWS ECR') {
 steps {
 script {
 sh "aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com"
 }
 
 }
 }
 
 stage('checkout-stage') {
                steps {
                    git branch: 'master', url: 'https://github.com/Divyamarathi/docker-sample-java-webapp.git'
                }
            }
 
 stage('build-stage') {
                steps {
                   sh 'mvn clean install'
                }
            }
	    stage('Build Docker Image') {
                steps {
                   script {
                       dockerImage = docker.build "${IMAGE_REPO_NAME}:${IMAGE_TAG}"
                   }
                }
            }
 
 // Uploading Docker images into AWS ECR
 stage('Pushing to ECR') {
 steps{ 
 script {
 sh "docker tag ${IMAGE_REPO_NAME}:${IMAGE_TAG} ${REPOSITORY_URI}:$IMAGE_TAG"
 sh "docker push ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}:${IMAGE_TAG}"
 }
 }
 }
   
 stage('Run Docker Container') {
               steps {
                  script {
                    //sh "docker rm ${DOCKER_IMAGE}:V${env.BUILD_NUMBER}"
                    sh "docker run -d -p 8085:8080 ${IMAGE_REPO_NAME}:${IMAGE_TAG}"
                  }
               }
	    }
 }
}
